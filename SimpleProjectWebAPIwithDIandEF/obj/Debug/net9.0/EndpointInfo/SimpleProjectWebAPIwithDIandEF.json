{
  "openapi": "3.0.4",
  "info": {
    "title": "My API",
    "version": "v1"
  },
  "paths": {
    "/api/Account/Register": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Register a new user ",
        "description": "Register a new user and get your Tokens",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationUser"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationUser"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationUser"
                }
              }
            }
          }
        }
      }
    },
    "/api/Account/Login": {
      "post": {
        "tags": [
          "Account"
        ],
        "description": "Login with email and password and get the OTP in Your Email Then Put it in Verify OTP Endpoint",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Account/Verify-OTP-Endpoint": {
      "post": {
        "tags": [
          "Account"
        ],
        "description": "This Endpoint take your OTP and Return User Tokens",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyOtpDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyOtpDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyOtpDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Account/Create-New-Jwt-BaseOn-Refresh-Token": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "This endpoint Generates a new JWT token, Use it when your token expired",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Account/Logout": {
      "get": {
        "tags": [
          "Account"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Regions": {
      "get": {
        "tags": [
          "Regions"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Regions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InputRegionDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InputRegionDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InputRegionDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Regions/{id}": {
      "get": {
        "tags": [
          "Regions"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Regions"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InputRegionDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InputRegionDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InputRegionDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Regions"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Roads": {
      "get": {
        "tags": [
          "Roads"
        ],
        "parameters": [
          {
            "name": "DifficultyLevel",
            "in": "query",
            "description": "Easy, Medium, Hard",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RoadLengthOrder",
            "in": "query",
            "description": "Asc, Desc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SearchByName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Roads"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InputRoadDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InputRoadDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InputRoadDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Roads/{id}": {
      "get": {
        "tags": [
          "Roads"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Roads"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InputRoadDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InputRoadDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InputRoadDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Roads"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApplicationUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "normalizedUserName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "normalizedEmail": {
            "type": "string",
            "nullable": true
          },
          "emailConfirmed": {
            "type": "boolean"
          },
          "passwordHash": {
            "type": "string",
            "nullable": true
          },
          "securityStamp": {
            "type": "string",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "phoneNumberConfirmed": {
            "type": "boolean"
          },
          "twoFactorEnabled": {
            "type": "boolean"
          },
          "lockoutEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lockoutEnabled": {
            "type": "boolean"
          },
          "accessFailedCount": {
            "type": "integer",
            "format": "int32"
          },
          "personName": {
            "type": "string",
            "nullable": true
          },
          "refreshTokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefreshToken"
            },
            "nullable": true
          },
          "otpCode": {
            "type": "string",
            "nullable": true
          },
          "otpExpirationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isOtpVerified": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "InputRegionDTO": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "regionImageUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InputRoadDTO": {
        "required": [
          "description",
          "difficultyType",
          "lengthInKm",
          "name",
          "regionId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "minLength": 1,
            "type": "string"
          },
          "lengthInKm": {
            "maximum": 20000,
            "minimum": 1,
            "type": "number",
            "format": "double"
          },
          "roadImageUrl": {
            "type": "string",
            "nullable": true
          },
          "regionId": {
            "type": "string",
            "format": "uuid"
          },
          "difficultyType": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "LoginDTO": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "minLength": 1,
            "type": "string",
            "format": "password"
          }
        },
        "additionalProperties": false
      },
      "RefreshToken": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "expiredOn": {
            "type": "string",
            "format": "date-time"
          },
          "isExpired": {
            "type": "boolean",
            "readOnly": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "revokenOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "RegisterDTO": {
        "required": [
          "confirmationPassword",
          "email",
          "password",
          "personName",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "personName": {
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "phoneNumber": {
            "minLength": 1,
            "pattern": "^(?:\\+201|01)[0-2,5][0-9]{8}$",
            "type": "string",
            "format": "tel"
          },
          "password": {
            "minLength": 1,
            "type": "string",
            "format": "password"
          },
          "confirmationPassword": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "VerifyOtpDto": {
        "required": [
          "email",
          "otp"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "otp": {
            "maxLength": 6,
            "minLength": 6,
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Enter 'Bearer' [space] and then your valid token.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}